
import dao.ConnectionProvider;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author sujith
 */
public class ShowPlots extends javax.swing.JFrame {

	/**
	 * Creates new form ShowHome
	 */
	String username = "";
	DefaultTableModel model = null;

	public ShowPlots() {
		initComponents();
	}

	public ShowPlots(String tempUsername) {
		initComponents();
		setLocationRelativeTo(null);
		username = tempUsername;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        txtColony = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPriceMin = new javax.swing.JTextField();
        txtPriceMax = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtFacing = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtSquareFeetMin = new javax.swing.JTextField();
        txtSquareFeetMax = new javax.swing.JTextField();
        applyFiltersButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background_two.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Vaasthu Nirmaan");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(104, 24, 184));
        jLabel1.setText("Plots");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 6, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Seller Name", "Seller ID", "Agent Name", "Colony Name", "City Name", "State", "Price", "Facing", "Square Feet", "Start Date", "Agent ID"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 73, 1000, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(104, 24, 184));
        jLabel4.setText("Colony ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 180, 108, -1));
        getContentPane().add(txtColony, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 184, 100, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(104, 24, 184));
        jLabel5.setText("City");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 224, 108, -1));
        getContentPane().add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(132, 224, 100, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(104, 24, 184));
        jLabel7.setText("Price");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 108, -1));
        getContentPane().add(txtPriceMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 108, -1));
        getContentPane().add(txtPriceMax, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 300, 100, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(104, 24, 184));
        jLabel8.setText("Facing");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 108, -1));

        txtFacing.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "North", "South", "East", "West", " " }));
        getContentPane().add(txtFacing, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 100, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(104, 24, 184));
        jLabel10.setText("Square Feet");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 108, -1));
        getContentPane().add(txtSquareFeetMin, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 108, -1));
        getContentPane().add(txtSquareFeetMax, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 430, 100, -1));

        applyFiltersButton.setBackground(new java.awt.Color(176, 244, 180));
        applyFiltersButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        applyFiltersButton.setForeground(new java.awt.Color(163, 17, 207));
        applyFiltersButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/applyFilters.png"))); // NOI18N
        applyFiltersButton.setText("Find");
        applyFiltersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyFiltersButtonActionPerformed(evt);
            }
        });
        getContentPane().add(applyFiltersButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, -1, -1));

        backButton.setBackground(new java.awt.Color(176, 244, 180));
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/background_two.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
		// TODO add your handling code here:
		setVisible(false);
		new CustomerDashboard(username).setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
		// TODO add your handling code here:
		try {
			model = (DefaultTableModel) jTable1.getModel();
			Connection con = ConnectionProvider.getCon();
			Statement s = con.createStatement();
			ResultSet rs = s.executeQuery("select * from plot, customer, agent where sellerID = customer.aadharID and agentID = agent.aadharID and agent.area = plot.cityName and endDate is NULL;");
			while (rs.next()) {
				model.addRow(new Object[]{rs.getString("customer.firstName"), rs.getString("plot.sellerID"), rs.getString("agent.firstName"), rs.getString("plot.colonyName"), rs.getString("plot.cityName"), rs.getString("plot.state"), rs.getString("plot.price"), rs.getString("plot.facing"), rs.getString("plot.squareFeet"), rs.getString("plot.startDate"), rs.getString("agent.aadharID")});
			}
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
    }//GEN-LAST:event_formComponentShown

    private void applyFiltersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyFiltersButtonActionPerformed
		// TODO add your handling code here:
		String colony = txtColony.getText();
		String city = txtCity.getText();
		String priceMin = txtPriceMin.getText();
		String priceMax = txtPriceMax.getText();
		String facing = (String) txtFacing.getSelectedItem();
		String sqftMin = txtSquareFeetMax.getText();
		String sqftMax = txtSquareFeetMax.getText();
		try {
			Connection con = ConnectionProvider.getCon();
			if (colony.equals("")) {
				colony = "colonyName != '0' and ";
			} else {
				colony = "colonyName = '" + colony + "' and ";
			}
			if (city.equals("")) {
				city = "cityName != '0' and ";
			} else {
				city = "cityName = '" + city + "' and ";
			}
			if (priceMin.equals("")) {
				priceMin = "price between " + "'0'" + " and ";
			} else {
				priceMin = "price between '" + priceMin + "' and ";
			}
			if (priceMax.equals("")) {
				priceMax = "'10000000'" + "and ";
			} else {
				priceMax = "'" + priceMax + "' and ";
			}
			if (facing.equals(" ")) {
				facing = "facing != '0' and ";
			} else {
				facing = "facing = '" + facing + "' and ";
			}
			if (sqftMin.equals("")) {
				sqftMin = "squareFeet between " + "'0'" + " and ";
			} else {
				sqftMin = "squareFeet between '" + sqftMin + "' and ";
			}
			if (sqftMax.equals("")) {
				sqftMax = "'10000000'";
			} else {
				sqftMax = "'" + sqftMax + "'";
			}
			model = (DefaultTableModel) jTable1.getModel();
			model.setRowCount(0);
			String query = "SELECT * FROM plot, customer, agent where " + colony + city + priceMin + priceMax + facing + sqftMin + sqftMax + " and agent.aadharID = plot.agentID and customer.aadharID = plot.sellerID and agent.area = plot.cityName and plot.endDate is NULL";
			Statement stmt = con.createStatement();
			ResultSet rs = stmt.executeQuery(query);
			System.out.println("RS done successfully");
			while (rs.next()) {
				model.addRow(new Object[]{rs.getString("customer.firstName"), rs.getString("plot.sellerID"), rs.getString("agent.firstName"), rs.getString("plot.colonyName"), rs.getString("plot.cityName"), rs.getString("plot.state"), rs.getString("plot.price"), rs.getString("plot.facing"), rs.getString("plot.squareFeet"), rs.getString("plot.startDate"), rs.getString("agent.aadharID")});
				System.out.println("Row added");
			}
			con.close();
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
		}
    }//GEN-LAST:event_applyFiltersButtonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
		// TODO add your handling code here:
		try {
			Connection con = ConnectionProvider.getCon();
			int index = jTable1.getSelectedRow();
			@SuppressWarnings("LocalVariableHidesMemberVariable")
			TableModel model = jTable1.getModel();
			String id = model.getValueAt(index, 1).toString();
			String agentID = model.getValueAt(index, 10).toString();
			String start = model.getValueAt(index, 9).toString();
			System.out.println("Value: " + id);
			Statement s = con.createStatement();
			String number;
			ResultSet rs = s.executeQuery("select * from agent, plot where aadharID = '" + agentID + "' and sellerID = '" + id + "' and startDate = '" + start + "' and aadharID = plot.agentID and Area = cityName");
			if (rs.next()) {
				number = rs.getString(4);
			} else {
				number = "";
			}
			JOptionPane.showMessageDialog(null, "Phone Number: " + number);
			System.out.println(id);
		} catch (Exception e) {
			JOptionPane.showMessageDialog(null, e);
			System.out.println(e);
		}
    }//GEN-LAST:event_jTable1MouseClicked

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ShowHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ShowHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ShowHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ShowHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ShowHome().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyFiltersButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtColony;
    private javax.swing.JComboBox<String> txtFacing;
    private javax.swing.JTextField txtPriceMax;
    private javax.swing.JTextField txtPriceMin;
    private javax.swing.JTextField txtSquareFeetMax;
    private javax.swing.JTextField txtSquareFeetMin;
    // End of variables declaration//GEN-END:variables
}
